#include <ESP8266WiFi.h>
#include "ThingSpeak.h"
#include <ESP8266HTTPClient.h>

WiFiClient client;

String thingSpeakAddress= "http://api.thingspeak.com/update?";
String writeAPIKey;
String tsfield1Name;
String request_string;

HTTPClient http;
unsigned long counterChannelNumber = 1325739;            
const char * myCounterReadAPIKey = "YMPW03B3NZDY9LEG"; 
const int FieldNumber = 1; 
const int SmsFieldNumber = 2; 



int x=0,A,i=0, f=0,j=0,k=0,u=0,v=0,w=0,Q=0;
String MakerIFTTT_Key ;
String MakerIFTTT_Event;
char *append_str(char *here, String s) {  int i=0; while (*here++ = s[i]){i++;};return here-1;}
char *append_ul(char *here, unsigned long u) { char buf[20]; return append_str(here, ultoa(u, buf, 10));}
char post_rqst[256];char *p;char *content_length_here;char *json_start;int compi;

void setup()
{
 WiFi.mode(WIFI_STA);
  ThingSpeak.begin(client);
  Serial.begin(19200);
  WiFi.disconnect();
  delay(3000);
  Serial.println("START");
   WiFi.begin("SONAECE","nw@sona1");
 // WiFi.begin("Redmi Note 10 cd","neverforever");
  while ((!(WiFi.status() == WL_CONNECTED))){
    delay(300);
    Serial.print("..");

  }
  Serial.println("Connected");
  Serial.println("Your IP is");
  Serial.println((WiFi.localIP().toString()));
  

}



void loop()
{
 if (client.connect("api.thingspeak.com",80)) {
       A=analogRead(A0);
   Serial.println(A);
       ThingSpeak.writeField(counterChannelNumber, FieldNumber,A, myCounterReadAPIKey);
  delay(1000);
  
       A=analogRead(A0);
   Serial.println(A);

 }

  



         if (((WiFi.status() == WL_CONNECTED))&&((A==0)||(A==1024))){                 //  loose connction
      if ((client.connect("maker.ifttt.com",80))) {
         MakerIFTTT_Key ="bbxVM1Lcxr0Vl8F_KkwOBFT3P3xgcFngKV47AF0Uts4";
         MakerIFTTT_Event ="sms";
         p = post_rqst;
         p = append_str(p, "POST /trigger/");
         p = append_str(p, MakerIFTTT_Event);
         p = append_str(p, "/with/key/");
         p = append_str(p, MakerIFTTT_Key);
         p = append_str(p, " HTTP/1.1\r\n");
         p = append_str(p, "Host: maker.ifttt.com\r\n");
         p = append_str(p, "Content-Type: application/json\r\n");
         p = append_str(p, "Content-Length: ");
         content_length_here = p;
         p = append_str(p, "NN\r\n");
         p = append_str(p, "\r\n");
         json_start = p;
         p = append_str(p, "{\"value1\":\"");
         p = append_str(p, "9629965122");                           //change number
         p = append_str(p, "\",\"value2\":\"");
         p = append_str(p, "Kindly,check connection at room 1 ");
         p = append_str(p, "\",\"value3\":\"");
         p = append_str(p, "");
         p = append_str(p, "\"}");
         compi= strlen(json_start);
         content_length_here[0] = '0' + (compi/10);
         content_length_here[1] = '0' + (compi%10);
         client.print(post_rqst);
         delay(12000);
         delay(3600000); //---------------------------------  time to fix wire         
        }}                                      //time to connect 1hr


        
while (i < 250) {         //total times need to run
       A=analogRead(A0);
      if(A>300)          //threshold value
      { 
      j++;
      Serial.println("A1 value =");
      Serial.println(A);
      Serial.println("i=");
      Serial.println(i);
      delay(1000);           
      
      Serial.println("j=");
      Serial.println(j);
      Serial.println("going to break");
//      break;
      Serial.print("breaked");
    }
      i++;
      delay(600000);                 // loop time 10 min
      Serial.println("ii=");
      Serial.println(i);
      Serial.println("last A value =");
      Serial.println(A);
    }
    if (((WiFi.status() == WL_CONNECTED))&&(j>=100)){                 //  5/15  no of times reached threshold (evaluating)
      if ((client.connect("maker.ifttt.com",80))) {
         MakerIFTTT_Key ="bbxVM1Lcxr0Vl8F_KkwOBFT3P3xgcFngKV47AF0Uts4";
         MakerIFTTT_Event ="sms";
         p = post_rqst;
         p = append_str(p, "POST /trigger/");
         p = append_str(p, MakerIFTTT_Event);
         p = append_str(p, "/with/key/");
         p = append_str(p, MakerIFTTT_Key);
         p = append_str(p, " HTTP/1.1\r\n");
         p = append_str(p, "Host: maker.ifttt.com\r\n");
         p = append_str(p, "Content-Type: application/json\r\n");
         p = append_str(p, "Content-Length: ");
         content_length_here = p;
         p = append_str(p, "NN\r\n");
         p = append_str(p, "\r\n");
         json_start = p;
         p = append_str(p, "{\"value1\":\"");
         p = append_str(p, "9894859444");                                       //hod
         p = append_str(p, "\",\"value2\":\"");
         p = append_str(p, "Kindly, Clean the rest room  in ground floor...");                                     // mms to employe to clean
         p = append_str(p, "\",\"value3\":\"");
         p = append_str(p, "");
         p = append_str(p, "\"}");
         compi= strlen(json_start);
         content_length_here[0] = '0' + (compi/10);
         content_length_here[1] = '0' + (compi%10);
         client.print(post_rqst); 
         Serial.println("sent to employee");
         Q=-1;
         if (client.connect("api.thingspeak.com",80)) {
                 ThingSpeak.writeField(counterChannelNumber, SmsFieldNumber,Q, myCounterReadAPIKey);
                 delay(1000);

 }
     
         Q=0;
         delay(10000);                                               //time for cleaning  30+30min                                
         delay(1800000);   
          delay(1800000); 
      }}                                                 
if (client.connect("api.thingspeak.com",80)) {

       A=analogRead(A0);
        Serial.println(A);
         ThingSpeak.writeField(counterChannelNumber, FieldNumber,A, myCounterReadAPIKey);
        delay(1000);

 }
   


          while (f < 300) {                                              // no of times
             A=analogRead(A0);
             if(A>310){                                                    //threshold value
               Serial.println("a2 value =");
               Serial.println(A);
                 k++;
                 delay(1000);
                // break;
                 Serial.println("k=");
                 Serial.println(k);
               }
               f++;
               delay(300000);                                   // loop time 5min
               Serial.println("f=");
               Serial.println(f);
              }
         
         if (((WiFi.status() == WL_CONNECTED))&&(k>=100)){                          // checking no of times crossed threshold after clean
         if ((client.connect("maker.ifttt.com",80))) {
         MakerIFTTT_Key ="bbxVM1Lcxr0Vl8F_KkwOBFT3P3xgcFngKV47AF0Uts4";
         MakerIFTTT_Event ="sms";
         p = post_rqst;
         p = append_str(p, "POST /trigger/");
         p = append_str(p, MakerIFTTT_Event);
         p = append_str(p, "/with/key/");
         p = append_str(p, MakerIFTTT_Key);
         p = append_str(p, " HTTP/1.1\r\n");
         p = append_str(p, "Host: maker.ifttt.com\r\n");
         p = append_str(p, "Content-Type: application/json\r\n");
         p = append_str(p, "Content-Length: ");
         content_length_here = p;
         p = append_str(p, "NN\r\n");
         p = append_str(p, "\r\n");
         json_start = p;
         p = append_str(p, "{\"value1\":\"");
         p = append_str(p, "6383012751");
         p = append_str(p, "\",\"value2\":\"");
         p = append_str(p, "Rest room in ground floor is not cleaned yet...");                          // mms to management about not cleaned
         p = append_str(p, "\",\"value3\":\"");
         p = append_str(p, "");
         p = append_str(p, "\"}");
         compi= strlen(json_start);
         content_length_here[0] = '0' + (compi/10);
         content_length_here[1] = '0' + (compi%10);
         client.print(post_rqst);  
         Serial.println("sent to managment");
         //-----------------------------------------
         x=x+1;
         Serial.println("x================================");
         Serial.println(x);
         delay(10000);

                 if((x==1)&&(x!=u)){
                    if (WiFi.status() == WL_CONNECTED){                 
      if ((client.connect("maker.ifttt.com",80))) {
         MakerIFTTT_Key ="bbxVM1Lcxr0Vl8F_KkwOBFT3P3xgcFngKV47AF0Uts4";
         MakerIFTTT_Event ="sms";
         p = post_rqst;
         p = append_str(p, "POST /trigger/");
         p = append_str(p, MakerIFTTT_Event);
         p = append_str(p, "/with/key/");
         p = append_str(p, MakerIFTTT_Key);
         p = append_str(p, " HTTP/1.1\r\n");
         p = append_str(p, "Host: maker.ifttt.com\r\n");
         p = append_str(p, "Content-Type: application/json\r\n");
         p = append_str(p, "Content-Length: ");
         content_length_here = p;
         p = append_str(p, "NN\r\n");
         p = append_str(p, "\r\n");
         json_start = p;
         p = append_str(p, "{\"value1\":\"");
         p = append_str(p, "9894859444");                           //change number
         p = append_str(p, "\",\"value2\":\"");
          Serial.println("x================================");
         Serial.println(x);
         p = append_str(p, "You have reported 1 time for not cleaning rest room in ground floor");
          Serial.println("u================================");
         Serial.println(u);
         p = append_str(p, "\",\"value3\":\"");
         p = append_str(p, "");
         p = append_str(p, "\"}");
         compi= strlen(json_start);
         content_length_here[0] = '0' + (compi/10);
         content_length_here[1] = '0' + (compi%10);
         client.print(post_rqst);
         u=x;
             Q=1;
         if (client.connect("api.thingspeak.com",80)) {
                 ThingSpeak.writeField(counterChannelNumber, SmsFieldNumber,Q, myCounterReadAPIKey);
                 delay(1000);

 }
       
         Q=0;}}}

         if((x==2)&&(x!=v)){
                   if (WiFi.status() == WL_CONNECTED){                 
      if ((client.connect("maker.ifttt.com",80))) {
         MakerIFTTT_Key ="bbxVM1Lcxr0Vl8F_KkwOBFT3P3xgcFngKV47AF0Uts4";
         MakerIFTTT_Event ="sms";
         p = post_rqst;
         p = append_str(p, "POST /trigger/");
         p = append_str(p, MakerIFTTT_Event);
         p = append_str(p, "/with/key/");
         p = append_str(p, MakerIFTTT_Key);
         p = append_str(p, " HTTP/1.1\r\n");
         p = append_str(p, "Host: maker.ifttt.com\r\n");
         p = append_str(p, "Content-Type: application/json\r\n");
         p = append_str(p, "Content-Length: ");
         content_length_here = p;
         p = append_str(p, "NN\r\n");
         p = append_str(p, "\r\n");
         json_start = p;
         p = append_str(p, "{\"value1\":\"");
         p = append_str(p, "9894859444");                           //change number
         p = append_str(p, "\",\"value2\":\"");
          Serial.println("x================================");
         Serial.println(x);
         p = append_str(p, "You have reported 2 time for not cleaning rest room in ground floor");
          Serial.println("v================================");
         Serial.println(v);
         p = append_str(p, "\",\"value3\":\"");
         p = append_str(p, "");
         p = append_str(p, "\"}");
         compi= strlen(json_start);
         content_length_here[0] = '0' + (compi/10);
         content_length_here[1] = '0' + (compi%10);
         client.print(post_rqst);
         v=x;
          Q=2;
         if (client.connect("api.thingspeak.com",80)) {
                 ThingSpeak.writeField(counterChannelNumber, SmsFieldNumber,Q, myCounterReadAPIKey);
                 delay(1000);

 }
       
         Q=0;}}}


       if((x==3)&&(x!=w)){
                  if (WiFi.status() == WL_CONNECTED){                 
      if ((client.connect("maker.ifttt.com",80))) {
         MakerIFTTT_Key ="bbxVM1Lcxr0Vl8F_KkwOBFT3P3xgcFngKV47AF0Uts4";
         MakerIFTTT_Event ="sms";
         p = post_rqst;
         p = append_str(p, "POST /trigger/");
         p = append_str(p, MakerIFTTT_Event);
         p = append_str(p, "/with/key/");
         p = append_str(p, MakerIFTTT_Key);
         p = append_str(p, " HTTP/1.1\r\n");
         p = append_str(p, "Host: maker.ifttt.com\r\n");
         p = append_str(p, "Content-Type: application/json\r\n");
         p = append_str(p, "Content-Length: ");
         content_length_here = p;
         p = append_str(p, "NN\r\n");
         p = append_str(p, "\r\n");
         json_start = p;
         p = append_str(p, "{\"value1\":\"");
         p = append_str(p, "9894859444");                           //change number
         p = append_str(p, "\",\"value2\":\"");
          Serial.println("x================================");
         Serial.println(x);
         p = append_str(p, "You have reported 3 time for not cleaning rest room in ground floor");
          Serial.println("w================================");
         Serial.println(w);
         p = append_str(p, "\",\"value3\":\"");
         p = append_str(p, "");
         p = append_str(p, "\"}");
         compi= strlen(json_start);
         content_length_here[0] = '0' + (compi/10);
         content_length_here[1] = '0' + (compi%10);
         client.print(post_rqst);
         w=x;
          Q=3;
         if (client.connect("api.thingspeak.com",80)) {
                 ThingSpeak.writeField(counterChannelNumber, SmsFieldNumber,Q, myCounterReadAPIKey);
                 delay(1000);

 }
       
         Q=0;}}}
       
         }
          delay(1800000);}
       
         Serial.println("end");
 i=0;
 k=0;
 f=0;
 j=0;   
 if(x>=3){
  x=0;
  u=0;
  v=0;
  w=0;}         
                  
 
 }